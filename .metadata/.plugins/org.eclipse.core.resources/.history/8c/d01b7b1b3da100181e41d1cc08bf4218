package com.xoado.common;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Base64;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.springframework.web.multipart.MultipartFile;

import net.coobird.thumbnailator.Thumbnails;

/**
 * Fileprocessing 文件上传
* @author 作者
* @version 创建时间：2018年7月20日 上午10:00:38
* 类说明
*/
public class XoadoFile {
	
	/**
	 * 图片上传  返回文件名，文件路径，base64缩略图  base64Name
	 * @param xoadofile
	 * @return
	 */
	static InputStream in = null;
	static String base64 = null;
	public static Map<String, Object> FileImageProcessing(MultipartFile xoadoFile){
		
		存储路径为:H:/xoadoImage
//		String url = "/usr/tomcat/apache-tomcat-8.5.29/webapps/File/image/";
//		String url = "D:/";
//		存储文件名 路径
		Map<String,Object> map = new HashMap<>();
//		生成一个新的文件名
		String name =  UUID.randomUUID()+xoadoFile.getOriginalFilename();
		File file = new File(url);
	
		if(!file.exists()){
			
			file.mkdirs();
			
		}
		
//		fileName数据库存储的全路径
		String fileName = url+name;
		String path = "www.xoado.com/File/image/";
		File xoadofile = new File(fileName);
		
		try {
			xoadoFile.transferTo(xoadofile);
			
		} catch (IllegalStateException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//		base64缩略图
		try {
			Thumbnails.of(xoadofile).size(50,50).toFile(url+"ZIP-"+name);
			 File newpositiveImgUrlname = new File(url+"ZIP-"+name);
			in = new FileInputStream(newpositiveImgUrlname);
			byte[] bytes=new byte[(int)(newpositiveImgUrlname).length()]; in.read(bytes);
			base64 = Base64.getEncoder().encodeToString(bytes); 
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		map.put("imageName", name);
		map.put("imageUrl", path+name);
		
		map.put("ZIPName", "ZIP-"+name);
		map.put("ZIPUrl", path+"ZIP-"+name+".png");
		
		return map;	
	}
	public static Map<String, Object> FileDocProcessing(MultipartFile xoadoFile){
		String url = "/usr/tomcat/apache-tomcat-8.5.29/webapps/File/DOC/";
//		存储文件名  路径
		Map<String,Object> map = new HashMap<>();
//		生成一个新的文件名
		String name =  UUID.randomUUID()+xoadoFile.getOriginalFilename();
		String path = "www.xoado.com/File/DOC/"+name;
		File file = new File(url);
		
		if(!file.exists()){
			
			file.mkdirs();
			
		}
//		fileName数据库存储的全路径
		String fileName = url+name;
		
		File xoadofile = new File(fileName);
		
		try {
			xoadoFile.transferTo(xoadofile);
		} catch (IllegalStateException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		map.put("DocName", name);
		map.put("docUrl", path);
		
		return map;
		
	}

}
