# 配置根Logger  
log4j.logger.com.xoado.client.XoadoLog= INFO, I
  
# 1.配置日志信息输出的目的地(还可以输出到文件，并且设置日志文件的大小) Appender 负责控制日志记录操作的输出。  
# 输出日志信息到控制台  
#log4j.appender.stdout = org.apache.log4j.ConsoleAppender  
#log4j.appender.stdout.Target = System.out  
  
 #2.配置日志信息的格式布局(布局类型可以选择)  
#log4j.appender.stdout.layout = org.apache.log4j.PatternLayout  
#log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n  
  
 #输出DEBUG级别以上的日志到文件F://logs/debug.log  
#log4j.appender.D = org.apache.log4j.FileAppender  
#log4j.appender.D.File = F:/logs/test.log  
#log4j.appender.D= org.apache.log4j.DailyRollingFileAppender


log4j.appender.I=org.apache.log4j.FileAppender
log4j.appender.I.File=F://logs/test1.log
log4j.appender.I.layout=org.apache.log4j.PatternLayout
log4j.appender.I.layout.ConversionPattern=%d %p [%c] - %m%n



# true表示将日志信息追加到指定文件中，false表示覆盖指定文件中的内容  
log4j.appender.I.Append = true  
log4j.appender.I.Threshold = DEBUG  
# 指定布局格式  
log4j.appender.I.layout = org.apache.log4j.PatternLayout  
log4j.appender.I.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n 